local settings = require("scripts.main.settings")
local debug = require("scripts.main.debug")

local tiles = {}
tiles.images = {}

function tiles.load()
    tiles.images = {}
    for i = 1, 64 do
        local imagePath = "assets/tiles/" .. i .. ".png"
        if love.filesystem.getInfo(imagePath) then
            tiles.images[i] = love.graphics.newImage(imagePath)
            tiles.images[i]:setFilter("nearest", "nearest")
            -- print("Loading tile: " .. imagePath)
        else
            print("Warning: can't load tile: " .. imagePath)
        end
    end
end

function tiles.generateMap()
    local map = {
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,19,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,19,1,1,1,1,1,20,20,1,1,20,1,1,1,1,1,1},
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,20,20,1,20,20,1,1,1,1,19,1,1,1,1,20,1,1,1,1,1,1,20,1,1,1,1,1},
        {1,1,1,1,1,1,1,1,1,1,1,19,19,19,19,19,20,20,1,20,20,1,1,1,1,1,1,1,1,1,1,1,19,19,19,19,20,20,1,1,1,19,19,1,19,19,1,1,1,1},
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,19,1,19,19,1,19,1,1,1,1,1,1,20,1,19,1,1,1,1,1,1,1,1,19,19,1,1,20,1,1,1,1},
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,19,1,1,1,20,20,1,20,20,1,1,1,1,19,19,19,1,1,1,20,20,1,1,1},
        {1,1,1,1,1,1,1,1,19,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,19,19,1,1,1,19,1,1,1,1,1,19,1,1,1,1,1,1,1,20,1,1,1},
        {1,1,1,1,1,1,19,19,1,1,1,1,36,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,19,1,19,19,1,1,1,1,1,19,1,20,1,1,1},
        {1,1,1,1,1,19,19,1,1,1,20,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,36,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,19,1,1,1,1,1},
        {1,1,20,20,1,20,20,20,1,1,1,1,1,1,1,1,1,1,34,34,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,19,1,19,1,1,1,1,1},
        {1,19,19,1,1,1,1,36,1,1,1,1,1,1,1,1,1,1,1,1,34,1,1,36,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,19,19,1,1,1,20,1,1},
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,20,20,20},
        {1,1,19,1,1,1,1,1,1,1,1,1,1,1,1,1,35,1,1,1,1,34,34,1,35,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
        {1,1,19,19,1,1,1,1,1,1,1,1,1,1,34,34,35,1,1,1,1,1,1,35,1,1,1,34,1,1,1,1,1,1,21,29,1,1,1,1,1,1,1,1,1,1,19,1,1,1},
        {1,1,1,1,19,19,1,20,20,35,1,1,1,1,34,1,1,35,36,36,1,1,1,1,35,1,1,34,1,1,1,1,1,1,40,48,1,1,1,1,1,1,1,1,1,1,19,1,1,1},
        {1,1,1,20,1,19,1,1,1,35,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,34,1,1,35,1,1,8,38,38,16,1,1,1,1,36,1,1,1,1,1,1,1,1},
        {1,1,1,1,1,19,1,1,1,35,35,1,1,1,1,36,1,1,1,1,1,1,1,26,26,1,1,34,1,1,35,35,1,31,8,16,23,1,1,1,1,1,1,1,1,1,1,1,1,1},
        {1,1,1,1,1,1,34,1,1,1,1,1,1,1,1,26,1,35,1,40,46,48,1,1,1,1,1,1,1,36,1,35,1,30,48,40,23,1,1,1,1,1,1,1,1,1,1,1,1,1},
        {1,1,1,1,1,1,1,20,20,1,1,34,1,1,33,1,24,15,38,16,45,39,39,1,1,34,1,26,36,25,1,1,1,48,45,45,40,35,35,1,1,1,34,1,1,1,36,1,1,1},
        {1,1,1,1,19,1,1,20,1,1,36,1,28,37,37,1,1,16,32,24,45,30,26,33,1,35,1,1,1,1,28,34,27,34,40,48,1,1,1,1,1,1,1,1,1,1,1,19,1,1},
        {1,1,1,1,20,20,1,1,1,1,1,1,40,13,13,55,35,23,35,34,23,30,1,1,1,35,26,25,55,1,1,1,1,1,8,16,1,1,1,1,1,1,34,1,1,1,1,36,1,1},
        {1,1,20,1,1,1,1,1,1,1,33,40,14,6,15,37,37,40,45,45,40,48,1,40,48,1,1,40,48,1,23,48,1,1,30,21,36,1,1,1,1,1,1,1,1,1,1,19,1,1},
        {1,1,20,1,1,1,35,35,1,1,1,1,16,13,15,16,34,23,46,31,47,13,40,44,24,48,45,14,48,40,14,5,7,14,15,13,48,1,1,1,1,34,1,1,1,1,1,19,1,1},
        {1,1,20,1,1,1,1,35,35,35,1,35,1,8,1,1,1,24,1,35,35,14,15,46,6,48,39,40,39,16,13,8,8,15,40,48,13,38,27,35,1,27,34,1,19,19,1,19,1,1},
        {1,1,1,36,20,1,1,1,1,1,1,23,1,23,35,1,24,1,16,1,30,45,1,47,24,36,1,1,1,40,30,23,40,48,1,1,32,1,1,35,35,35,34,19,19,1,1,1,1,1},
        {1,1,1,36,20,1,1,1,1,1,36,1,1,1,1,1,34,23,48,1,1,16,48,45,32,32,14,37,37,55,40,15,14,5,1,27,13,1,1,1,1,34,1,19,1,1,1,1,1,1},
        {1,1,1,1,20,1,1,1,1,1,1,1,1,34,1,1,40,15,32,34,1,24,16,48,1,13,14,15,1,1,16,13,16,48,1,1,29,27,1,1,1,34,1,19,36,19,19,1,1,1},
        {1,1,1,1,1,1,1,1,1,1,1,25,1,1,1,1,16,62,30,1,1,1,1,16,15,1,40,1,1,1,34,34,1,40,27,1,48,34,1,1,1,1,1,1,1,1,1,19,19,1},
        {1,1,20,1,1,1,1,35,35,1,35,1,1,1,19,19,1,1,1,25,24,48,1,47,39,39,38,8,8,16,48,37,46,40,14,15,32,1,34,27,35,1,1,1,1,19,19,1,1,1},
        {1,20,20,1,1,36,1,35,1,1,35,1,1,1,1,1,1,26,20,20,1,46,16,1,26,1,1,1,1,1,1,28,1,16,13,13,37,37,1,1,35,1,1,1,1,19,1,1,1,1},
        {1,1,20,19,1,1,1,19,1,1,1,1,35,35,1,19,1,1,1,1,20,20,1,1,1,1,35,35,1,1,34,34,35,27,1,13,13,7,1,1,35,1,1,1,1,1,19,19,1,1},
        {1,1,1,20,1,1,19,19,1,1,1,1,1,35,19,1,20,20,20,1,1,1,1,1,34,1,1,20,20,20,34,20,1,1,1,16,15,8,1,1,1,35,36,1,1,19,1,1,1,1},
        {1,1,20,20,1,19,19,36,1,1,1,1,1,1,34,34,34,1,1,1,35,1,1,1,1,1,35,1,1,1,35,1,1,1,1,40,8,1,1,1,1,1,36,1,1,19,1,36,1,1},
        {1,1,1,1,1,19,1,34,1,35,35,28,1,1,1,20,1,1,1,35,35,1,1,36,1,1,1,1,35,35,1,1,1,37,6,15,1,1,1,34,34,34,1,34,34,19,19,1,1,1},
        {1,1,1,1,1,1,1,34,1,1,35,35,1,1,1,20,1,1,1,1,1,1,1,1,1,1,1,1,1,35,1,1,22,5,6,5,29,1,1,1,1,1,1,1,1,19,1,1,1,1},
        {1,1,1,1,1,1,1,34,34,1,1,1,1,1,20,20,1,1,1,1,1,1,8,38,16,8,38,16,38,15,37,37,40,5,5,8,1,1,35,35,1,1,1,1,1,1,1,1,1,1},
        {1,1,1,1,1,1,1,1,1,1,1,1,35,1,1,1,1,1,34,34,1,1,31,1,24,1,1,23,38,8,37,37,37,8,1,1,1,1,35,1,1,1,1,1,19,19,19,1,1,1},
        {1,1,1,1,19,1,1,1,1,20,1,35,1,1,1,1,35,1,1,19,1,1,48,1,40,48,1,40,38,48,24,38,38,1,1,19,19,1,35,1,1,1,1,1,1,1,36,1,1,1},
        {20,20,1,1,19,19,1,1,20,1,1,1,1,1,1,1,35,1,1,1,1,1,8,46,16,8,54,16,14,6,32,28,1,1,20,1,1,1,1,1,1,1,1,1,1,1,36,1,1,1},
        {20,20,1,1,1,19,1,1,36,1,1,1,1,1,1,1,19,35,1,1,19,1,32,33,24,31,44,22,15,46,1,1,1,1,20,20,19,19,1,1,1,1,1,36,1,1,1,1,1,1},
        {1,20,20,1,1,19,1,20,1,19,1,1,1,1,1,19,19,35,35,1,1,1,48,45,40,37,37,40,5,1,1,1,20,1,1,1,34,1,1,1,1,1,1,19,19,19,1,1,1,1},
        {1,1,1,1,1,1,1,19,1,19,1,1,36,1,1,1,1,1,1,1,1,1,24,1,1,1,27,1,1,1,1,1,1,35,35,1,1,34,34,34,1,1,36,1,1,1,1,1,1,1},
        {1,1,19,1,1,1,20,19,19,1,1,1,36,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,36,1,1,1,35,1,19,19,1,1,19,1,19,19,19,1,1,1,1,1,1},
        {1,1,1,19,1,20,19,19,1,1,1,1,1,1,1,1,1,1,35,35,19,1,1,36,1,1,1,1,1,1,1,1,35,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
        {1,20,1,1,1,1,19,1,1,1,1,1,1,1,1,1,1,35,35,1,36,1,1,1,1,1,20,1,19,19,19,1,35,1,1,1,1,35,1,1,1,1,1,1,1,1,1,1,1,1},
        {1,20,20,20,1,19,1,1,1,1,1,19,1,1,1,1,1,1,1,1,1,34,1,1,1,1,35,35,1,34,34,1,1,1,1,1,1,1,1,1,1,1,1,1,1,36,1,1,1,1},
        {1,20,20,1,1,1,1,1,19,1,1,1,1,1,1,1,1,36,1,1,1,1,1,1,35,35,35,1,1,1,1,1,1,1,36,1,1,1,1,1,1,1,1,36,1,1,1,1,1,1},
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,35,35,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,36,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,36,1,1},
    }
    return map
end

function tiles.checkCollision(x, y, size)
    local tileX = math.floor(x / settings.TILE_SIZE) + 1
    local tileY = math.floor(y / settings.TILE_SIZE) + 1

    if tileX < 1 or tileX > settings.WORLD_WIDTH or tileY < 1 or tileY > settings.WORLD_HEIGHT then
        return true
    end

    return false
end

function tiles.draw(map)
    for y = 1, settings.WORLD_HEIGHT do
        for x = 1, settings.WORLD_WIDTH do
            local tileType = map[y][x]
            if tileType and tileType > 0 and tiles.images[tileType] then
                love.graphics.setColor(1, 1, 1)
                love.graphics.draw(
                    tiles.images[tileType],
                    (x-1) * settings.TILE_SIZE,
                    (y-1) * settings.TILE_SIZE,
                    0,
                    settings.TILE_SIZE / tiles.images[tileType]:getWidth(),
                    settings.TILE_SIZE / tiles.images[tileType]:getHeight()
                )
            end
        end
    end

    if debug.isEnabled() then
        love.graphics.setColor(1, 0, 0, 0.5)
        for y = 1, settings.WORLD_HEIGHT do
            for x = 1, settings.WORLD_WIDTH do
                if tiles.checkCollision((x-1) * settings.TILE_SIZE, (y-1) * settings.TILE_SIZE, 1) then
                    love.graphics.rectangle('fill', 
                        (x-1) * settings.TILE_SIZE, 
                        (y-1) * settings.TILE_SIZE, 
                        settings.TILE_SIZE, 
                        settings.TILE_SIZE)
                end
            end
        end
    end
end

return tiles